// Generated by CoffeeScript 1.7.1
var Animated;

Animated = function() {};

Animated.prototype.init = function() {
  var animated, el, i;
  animated = this;
  $("head").append("<style id=\"animated-styles\"></style>");
  this.elements = this.getElements();
  i = 0;
  while (i < this.elements.length) {
    el = this.elements.eq(i);
    if (animated.canAnimate(el)) {
      animated.addKeyFrames(el);
      animated.addStyles(el);
    }
    i++;
  }
};

Animated.prototype.getElements = function() {
  var elements;
  elements = $("*[data-animated-property]");
  return elements;
};

Animated.prototype.addKeyFrames = function(element) {
  var from, property, to;
  property = element.data("animated-property");
  from = element.data("animated-from");
  to = element.data("animated-to");
  $("#animated-styles").append("@keyframes " + property + "-animation { from { " + from + "; } to { " + to + "; } }");
};

Animated.prototype.canAnimate = function(elementToTest) {
  if (elementToTest.data("animated-property") === undefined) {
    return false;
  }
  if (elementToTest.data("animated-from") === undefined) {
    return false;
  }
  if (elementToTest.data("animated-to") === undefined) {
    return false;
  }
  return true;
};

Animated.prototype.addStyles = function(element) {
  var animID, css, cssString, from, property, selector;
  selector = '#' + element.prop("id");
  animID = element.prop("id") + "-animation";
  property = element.data("animated-property");
  from = element.data("animated-from");
  css = [];
  css.push(selector + ' { ');
  css.push('-webkit-animation: ' + animID + ' 1s linear 1s 1 forward;');
  css.push('-moz-animation: ' + animID + ' 1s linear 1s 1 forward;');
  css.push('-o-animation: ' + animID + ' 1s linear 1s 1 forward;');
  css.push('animation: ' + animID + ' 1s linear 1s 1 forward;');
  css.push(property + ':' + from + ';');
  css.push('}');
  cssString = css.join('\r\n');
  return $("#animated-styles").append(cssString);
};
